; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32dev

; enable build cache to speed up multiple builds of same project or framework
build_cache_dir = ~/.buildcache

[scripts_defaults]
extra_scripts = 
  pre:pio-scripts/set_version.py ; sets the version and other defines
  post:pio-scripts/output_hex.py ; copys and renames the hexfile to the build folder

[env]
framework = arduino

; upload_speed = 921600
; upload_port = COM4
monitor_speed = 115200
; monitor_port = COM4

; ============================================================
; Checks for the compatibility with frameworks and dev/platforms
; Adjust as necessary
lib_compat_mode = strict
lib_ldf_mode = chain+
;lib_ldf_mode = deep+

; ============================================================
; LIBRARIES
; are used for all boards
lib_deps = 
  pfeerick/elapsedMillis @ ^1.0.6
  bblanchon/ArduinoJson @ ^6.21.5

; ============================================================
; BUILD FLAGS
; are applied to every build
build_flags = 
  ; -DSOMEDEFINE

; ============================================================
; SCRIPTS
; executed at every build
extra_scripts = ${scripts_defaults.extra_scripts}


; ============================================================
; CHIP SPECIFIC
; ============================================================
[esp32_base]
platform = espressif32
lib_deps = 
  esphome/AsyncTCP-esphome@^2.1.4
  esphome/ESPAsyncWebServer-esphome@^3.2.2
  ; or when using aircoookie fork:
  ; https://github.com/pbolduc/AsyncTCP.git @ 1.2.0
  ; https://github.com/Aircoookie/ESPAsyncWebServer.git
  ${env.lib_deps}
; build_unflags = 
build_flags =
  ${env.build_flags}

[esp8266_base]
platform = espressif8266
lib_deps = 
  esphome/ESPAsyncTCP-esphome@^2.0.0
  esphome/ESPAsyncWebServer-esphome@^3.2.2
  ; or use aircoookie forks:
  ; ESPAsyncTCP @ 1.2.2
  ; https://github.com/Aircoookie/ESPAsyncWebServer.git
  ${env.lib_deps}
; build_unflags =
build_flags =
  ${env.build_flags}


; ============================================================
; BOARDS (each creates one build)
; ============================================================
[env:esp32dev]
extends = esp32_base
board = esp32dev
build_flags =
 -DFRIENDLY_RELEASE_NAME="ESP32_dev"
 ${esp32_base.build_flags}

[env:ttgo-lora32-v21]
extends = esp32_base
board = ttgo-lora32-v21
build_flags =
 -DFRIENDLY_RELEASE_NAME="ESP32_LoRa32_V2.1"
 ${esp32_base.build_flags}

; maybe need to add custom board because it is not listed as a board in platformio
; https://community.platformio.org/t/custom-board-missing-file-pins-arduino-h-no-such-file-or-directory/36622/3
; https://github.com/espressif/arduino-esp32/blob/master/variants/makergo_c3_supermini/pins_arduino.h
; https://github.com/espressif/arduino-esp32/blob/master/variants/nologo_esp32c3_super_mini/pins_arduino.h

[env:esp32c3_super_mini]
extends = esp32_base
board = nologo_esp32c3_super_mini
; board = makergo_c3_supermini
build_flags =
 -DFRIENDLY_RELEASE_NAME="ESP32C3_SuperMini"
 ${esp32_base.build_flags}
